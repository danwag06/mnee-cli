function t(...t){return t.every(t=>"string"==typeof t)}function r(...t){return t.every(t=>"number"==typeof t)}const e={String:"string",BigInt:"bigint",Number:"number"};function n(e,n,i){if(!t(e)&&!r(e))throw new TypeError("toToken must be called on a number or string, got "+typeof e);if(!Number.isInteger(Number(e)))throw new TypeError("toToken must be called on a whole number or string format whole number");if(!Number.isInteger(n)||n<0)throw new TypeError("decimals must be a non-negative integer");let o=0n;const a="string"==typeof e?e.startsWith("-"):e<0;switch(typeof e){case"bigint":o=e;break;case"string":o=BigInt(e.replace("-","").split(".")[0]);break;default:o=BigInt(Math.abs(Math.round(e)))}const s=a?-1n:1n,u=o/10n**BigInt(n),g=o%10n**BigInt(n);switch(i){case"bigint":if(g>0)throw new Error("toToken: Cannot return a bigint with decimal part");return u*s;case"string":return`${a&&(u>0||g>0)?"-":""}${u}.${g.toString().padStart(n,"0")}`;default:return Number(`${a&&(u>0||g>0)?"-":""}${u}.${g.toString().padStart(n,"0")}`)}}function i(e,n,i){if(!t(e)&&!r(e)&&!function(...t){return t.every(t=>"bigint"==typeof t)}(e))throw new TypeError("toTokenSat must be called on a number, string or bigint, got "+typeof e);if(!Number.isInteger(n)||n<0)throw new TypeError("decimals must be a non-negative integer");let o="";const a="string"==typeof e?e.startsWith("-")&&"-0"!==e:e<0;switch(typeof e){case"bigint":o=(e*10n**BigInt(n)).toString();break;case"string":{const t=e.replace("-",""),[r,i]=t.split(".");o=r+(i||"").padEnd(n,"0"),!a||"0"===r&&"0"===i||(o=`-${o}`);break}default:o=(Math.round(Math.abs(e)*10**n)*(a?-1:1)).toString()}switch(i){case"bigint":return BigInt(o);case"string":return o;default:{let t;try{t=Number(o)}catch(t){throw new Error(`Invalid number: ${o}`)}if(!Number.isSafeInteger(Math.round(t)))throw new Error("Integer overflow. Try returning a string instead.");return t}}}function o(t,r){return i(t,8,r)}function a(t,r){return n(t,8,r)}export{e as ReturnTypes,a as toBitcoin,o as toSatoshi,n as toToken,i as toTokenSat};
//# sourceMappingURL=index.js.map
