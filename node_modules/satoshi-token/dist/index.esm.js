function t(){return[].slice.call(arguments).every(function(t){return"string"==typeof t})}function r(){return[].slice.call(arguments).every(function(t){return"number"==typeof t})}var e={String:"string",BigInt:"bigint",Number:"number"};function n(e,n,i){if(!t(e)&&!r(e))throw new TypeError("toToken must be called on a number or string, got "+typeof e);if(!Number.isInteger(Number(e)))throw new TypeError("toToken must be called on a whole number or string format whole number");if(!Number.isInteger(n)||n<0)throw new TypeError("decimals must be a non-negative integer");var o=0n,a="string"==typeof e?e.startsWith("-"):e<0;switch(typeof e){case"bigint":o=e;break;case"string":o=BigInt(e.replace("-","").split(".")[0]);break;default:o=BigInt(Math.abs(Math.round(e)))}var u=a?-1n:1n,s=o/Math.pow(10n,BigInt(n)),g=o%Math.pow(10n,BigInt(n));switch(i){case"bigint":if(g>0)throw new Error("toToken: Cannot return a bigint with decimal part");return s*u;case"string":return(a&&(s>0||g>0)?"-":"")+s+"."+g.toString().padStart(n,"0");default:return Number((a&&(s>0||g>0)?"-":"")+s+"."+g.toString().padStart(n,"0"))}}function i(e,n,i){if(!t(e)&&!r(e)&&!function(){return[].slice.call(arguments).every(function(t){return"bigint"==typeof t})}(e))throw new TypeError("toTokenSat must be called on a number, string or bigint, got "+typeof e);if(!Number.isInteger(n)||n<0)throw new TypeError("decimals must be a non-negative integer");var o="",a="string"==typeof e?e.startsWith("-")&&"-0"!==e:e<0;switch(typeof e){case"bigint":o=(e*Math.pow(10n,BigInt(n))).toString();break;case"string":var u=e.replace("-","").split("."),s=u[0],g=u[1];o=s+(g||"").padEnd(n,"0"),!a||"0"===s&&"0"===g||(o="-"+o);break;default:o=(Math.round(Math.abs(e)*Math.pow(10,n))*(a?-1:1)).toString()}switch(i){case"bigint":return BigInt(o);case"string":return o;default:var c;try{c=Number(o)}catch(t){throw new Error("Invalid number: "+o)}if(!Number.isSafeInteger(Math.round(c)))throw new Error("Integer overflow. Try returning a string instead.");return c}}function o(t,r){return i(t,8,r)}function a(t,r){return n(t,8,r)}export{e as ReturnTypes,a as toBitcoin,o as toSatoshi,n as toToken,i as toTokenSat};
//# sourceMappingURL=index.esm.js.map
